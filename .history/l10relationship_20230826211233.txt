=>eloqunet relationship

=> one to one 

protected $table = "users";
protected $primaryKey = "id";


=>In Model (Article.php )

  public function userfromuserphp(){
        return $this->BelongsTo("APP\Models\Users");
    }


    //for one 
    public function userfromuserphp(){
        // return $this->belongsTo("APP\Models\Users");
        return $this->belongsTo(User::class);

    }



      //for many 
      public function userfromuserphp(){
        // return $this->belongsTo("APP\Models\Users");
        return $this->belongsTo(User::class);

    }


=>In MOdel (users)
      public function customearticle(){
        // Method 1 
        // return $this->hasOne('APP\Models\Article');

        // Method 2 
        return $this->hasOne(Article::class);
    }

     public function customearticles(){
        return $this->hasMany(Article::class);
    }






=>In Web 
use App\Models\User;
    

Route::get('users/{id}/article',function($id){
   $articles = User::findOrFail($id)->customearticle->title;
   $articles = User::findOrFail($id)->customearticle->description;
   $articles = User::findOrFail($id)->customearticle->rating;

   return $articles;
});



Route::get('articles/{id}/user',function($id){
    $articles = Article::findOrFail($id)->userfromuserphp->name;
   return $articles;

});